/* context-free expression grammar */

program         -> (declaration "\n"?* )* EOF ;

declaration     -> var_declaration
                |  statement ;

statement       -> if_stmt
                |  cmd_stmt
                |  block ;

var_declaration -> "var" IDENTIFIER "=" expression "\n" ;


/* statemetns */

if_stmt         -> "if" expression block (( "elif" expression block ) | ( "else" block ))? ;

cmd_stmt        -> SHLIT ( argument* );

block           -> "{" statement* "}" ;


/* expressions */

argument        -> expression ;

expression      -> primary ;

primary         -> STRING 
                |  SHLIT
                |  bool_lit
                |  number
                |  interpolation ;

bool_lit        -> "true" | "false ";

number          -> NUMBER ;

interpolation   -> INTERPOLATION ;


/* if, elif, else */



//program      -> declaration* EOF ;
//
//declaration  -> varDecl
//             | statement ;
//
//statement    -> exprStmt
//             |  loopStmt
//             |  ifStmt
//             |  block ;
//
//loopStmt     -> "loop" () block ;
//
//ifStmt       -> "if" expression block ;
//
//block        -> "{" declaration* "}" ;
//
//varDecl      -> "var" IDENTIFIER "=" expression "\n" ;
//
//exprStmt     -> expression "\n" ;
//
//expression   -> assignment ;
//assignment   -> IDENTIFIER "=" assignment
//             |  equality
//             |  logic_or ;
//
//logic_or     -> logic_and ( "or" logic_and )* ;
//logic_and    -> equality ( "and" equality )* ;
//
//equality     -> comparison ( ( "!=" | "==" ) comparison )* ;
//comparison   -> term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
//term         -> factor ( ( "-" | "+" ) factor )* ;
//factor       -> unary ( ( "/" | "*" ) unary )* ;
//unary        -> ( "!" | "-") unary
//             |  call;
//
//call         -> primary ( "(" arguments? ")" )* ;
//arguments    -> expression ( "," expression )* ;
//
//
//primary      -> "true" | "false"
//             |  NUMBER | STRING
//             |  "(" expression ")"
//             |  IDENTIFIER ;
